{"version":3,"sources":["componentes/CategoryAdd.js","helpers/getGifs.js","componentes/GifGridItem.js","componentes/GifGrid.js","hooks/useFecthGifs.js","componentes/Categorias.js","componentes/GifExpertApp.js","index.js"],"names":["CategoryAdd","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","placeholder","className","getGifs","category","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","console","log","Categorias","categories","cat","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAAyBO,OACvCN,EAAc,MAKlB,SACI,uBACAO,KAAK,OACLC,MAAOT,EACPU,SAjBkB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,QAiBnBG,YAAY,aACZC,UAAU,c,+BC1BTC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEKI,MAAMF,GAFX,cAEbG,EAFa,gBAGIA,EAAUC,OAHd,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QATtB,kBAaZM,GAbY,4CAAH,sDCEPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACrC,OACI,qBAAKJ,UAAU,uDAAf,SACI,qBAAKkB,IAAKd,EAAKe,IAAKL,OCAnBM,EAAU,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SAEtB,ECHwB,SAAEA,GAE1B,MAA0BhB,mBAAS,CAC/BuB,KAAM,GACNY,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAkBA,OAZAC,qBAAU,WACNvB,EAASC,GACRuB,MAAK,SAAAC,GACFC,YAAW,WACPJ,EAAS,CACLd,KAAMiB,EACNL,SAAS,MAEf,WAEP,CAACnB,IAEGoB,EDjBmBM,CAAa1B,GAA/BO,EAAR,EAAQA,KAAMY,EAAd,EAAcA,QAEd,OADAQ,QAAQC,IAAIrB,GAER,qCACI,6BAAKP,IAEJmB,EAAU,+CAEP,qBAAKrB,UAAU,YAAf,SACKS,EAAKE,KAAI,SAAAC,GAAG,OACT,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEdxBkB,EAAa,WAEtB,MAAoC7C,mBAAS,IAA7C,mBAAO8C,EAAP,KAAmB/C,EAAnB,KAEA,OACI,qCACI,sBAAKe,UAAU,kBAAf,UACI,cAAC,EAAD,CAAaf,cAAeA,IAC5B,oBAAIe,UAAU,kCAAd,SACKgC,EAAWrB,KAAI,SAACsB,GAAD,OAAU,6BAAeA,GAANA,WAG3C,qBAAKjC,UAAU,YAAf,SACKgC,EAAWrB,KAAI,SAACsB,GAAD,OACZ,cAAC,EAAD,CAEI/B,SAAU+B,GADLA,YCHdC,EAZM,WAEjB,OACI,qCACA,oBAAIlC,UAAU,4DAAd,0BACA,uBAEA,cAAC,EAAD,Q,MCNRmC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2fc2acbd.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const CategoryAdd = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (e) =>{\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n            setCategories((cats) => [inputValue,...cats]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n            placeholder=\"Categorias\"\r\n            className=\"search\"\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nCategoryAdd.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=15&api_key=sTLr5nr0ZEaLHw3URwkLKYeYAybJHpbx`;\r\n    const respuesta = await fetch(url);\r\n    const { data } = await respuesta.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    });\r\n    \r\n    return gifs;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn animate__slow\">\r\n            <img src={url} alt={title}/>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFecthGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data, loading } = useFetchGifs(category);\r\n    console.log(data)\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n\r\n            {loading ? <p>Caricamento...</p> :\r\n\r\n                <div className=\"card-grid\">\r\n                    {data.map(img => (\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                    ))}\r\n                </div>\r\n\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n\r\n    useEffect(() => {\r\n        getGifs( category )\r\n        .then(imgs => {\r\n            setTimeout(() => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            },2500)\r\n        })\r\n    }, [category])\r\n\r\n    return state;\r\n}","import React, { useState } from 'react'\r\nimport { CategoryAdd } from './CategoryAdd';\r\nimport { GifGrid } from './GifGrid';\r\n\r\nexport const Categorias = () => {\r\n\r\n    const [categories, setCategories] = useState([])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"menu-categorias\">\r\n                <CategoryAdd setCategories={setCategories} />\r\n                <ul className=\"list-categorias invisible-movil\">\r\n                    {categories.map((cat) => (<li key={cat}>{cat}</li>))}\r\n                </ul>\r\n            </div>\r\n            <div className=\"contenido\">\r\n                {categories.map((cat) => (\r\n                    <GifGrid\r\n                        key={cat}\r\n                        category={cat} />))}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Categorias } from './Categorias';\r\n\r\n\r\nconst GifExpertApp = ()=>{\r\n\r\n    return(\r\n        <>\r\n        <h2 className=\"animate__animated animate__lightSpeedInLeft animate__slow\">GifExpertApp</h2>\r\n        <hr />\r\n\r\n        <Categorias />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GifExpertApp;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './componentes/GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp /> ,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}